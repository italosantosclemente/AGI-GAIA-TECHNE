import numpy as np
import math
import matplotlib.pyplot as plt

# --- 1. Fatores e Constantes do Framework AGI-GAIA-TECHNE ---

# Techn√© Pura: Fundamentos de IA (Nobel F√≠sica 2024)
FATOR_HINTON_HOPFIELD_2024 = 0.95
# Techn√© Pura: Computa√ß√£o Qu√¢ntica (Nobel F√≠sica 2025)
FATOR_QUANTUM_2025 = 0.90
# Techn√©-Gaia Integrada: IA em Biologia (Nobel Qu√≠mica 2024)
FATOR_CHEMISTRY_IA_2024 = 0.85
# Urg√™ncia de Gaia (Humanidade): Paz/Democracia (Nobel Paz 2025)
FATOR_PAZ_2025 = 0.75

# S√≠mbolo Conceitual de √Ålef (Potencial Transfinito / Sinergia N√£o-Linear)
ALEPH_SIGNIFICANCE = 1.05

# FATOR DE ETHOS HUMANO E SUSTENTABILIDADE (O controle √©tico)
# Um valor alto (> 0.65) representa forte alinhamento regulat√≥rio e √©tico.
FATOR_ETHOS_HUMANO = 0.65

# Pesos Conceituais
PESO_TECHNE_PURA = 0.50
PESO_TECHNE_GAIA = 0.30
PESO_URGENCIA_GAIA = 0.20

# --- 2. Fun√ß√£o de Ativa√ß√£o N√£o Linear (Sigmoide) ---

def sigmoide(x: float) -> float:
    """
    Fun√ß√£o Log√≠stica (Sigmoide) para introduzir a n√£o-linearidade.
    Modela a sinergia e a satura√ß√£o do poder da Techn√© Pura.
    """
    try:
        return 1.0 / (1.0 + math.exp(-x))
    except OverflowError:
        if x > 0:
            return 1.0
        else:
            return 0.0

# --- 3. C√°lculo Central: Techn√© Score (Hip√≥tese √Ålef) ---

def calcular_techne_score_hipotese_alef() -> float:
    """
    Calcula o Techn√© Score incorporando a Hip√≥tese √Ålef.
    """
    input_linear = (FATOR_HINTON_HOPFIELD_2024 + FATOR_QUANTUM_2025) * ALEPH_SIGNIFICANCE
    techn√©_score = sigmoide(input_linear)
    return techn√©_score

# --- 4. √çndice de Alerta √âtico (IAE) e a Decis√£o Humana ---

def calcular_alerta_etico(techn√©_score: float) -> float:
    """
    Calcula o √çndice de Alerta √âtico (IAE).
    Mede o risco de descontrole: Poder da Techn√© vs. For√ßa do Ethos.
    IAE = (Techn√© Score / FATOR_ETHOS_HUMANO)
    """
    IAE = techn√©_score / FATOR_ETHOS_HUMANO
    return round(IAE, 4)

# --- 5. C√°lculo do √çndice de Harmonia AGI-GAIA-TECHNE ---

def calcular_harmonia_final(techn√©_score: float) -> float:
    """
    Calcula o √çndice de Harmonia, que agora penaliza a falta de Ethos.
    """
    termo_techne = techn√©_score * PESO_TECHNE_PURA
    termo_techne_gaia = FATOR_CHEMISTRY_IA_2024 * PESO_TECHNE_GAIA * FATOR_ETHOS_HUMANO
    termo_urgencia_gaia = FATOR_PAZ_2025 * PESO_URGENCIA_GAIA
    harmony_index = termo_techne + termo_techne_gaia - termo_urgencia_gaia
    return round(harmony_index, 4)

# --- 6. Fun√ß√£o de Visualiza√ß√£o ---

def plot_results(techn√©_score, ia_alerta, harmony_index):
    metrics = ['Techn√© Score', 'IAE', 'Harmony Index']
    values = [techn√©_score, ia_alerta, harmony_index]
    colors = ['blue', 'red', 'green']

    plt.bar(metrics, values, color=colors)
    plt.ylim(0, 1)
    plt.title('AGI-GAIA-TECHNE Framework Metrics')
    plt.ylabel('Value')
    plt.axhline(y=0.5, color='r', linestyle='--', label='Critical IAE Threshold')
    plt.legend()
    plt.savefig('metrics_visualization.png')
    print("\n--- Visualiza√ß√£o ---")
    print("O gr√°fico de m√©tricas foi salvo como 'metrics_visualization.png'")

# --- 7. Execu√ß√£o do Modelo ---

def run_analysis_ethos():
    """
    Executa a an√°lise √©tica completa para a itera√ß√£o 2025.32.
    Esta an√°lise √© guiada pelo princ√≠pio do Humanismo Transcendental de ISC:
    "A defesa de um humanismo transcendental √© a nega√ß√£o da liberdade ontol√≥gica
    das m√°quinas, e assim se pode guiar um avan√ßo cultural sustent√°vel e livre."
    """
    techn√©_score_nl = calcular_techne_score_hipotese_alef()
    ia_alerta = calcular_alerta_etico(techn√©_score_nl)
    harmony_index = calcular_harmonia_final(techn√©_score_nl)

    print("--- AGI-GAIA-TECHNE: Monitoramento √âtico (Decis√£o Humana) ---")
    print(f"Fator de Ethos Humano e Sustentabilidade (Controle √âtico): {FATOR_ETHOS_HUMANO}")

    print("\n--- Avalia√ß√£o de Poder e Risco ---")
    print(f"Techn√© Score (N√£o Linear, Hip√≥tese √Ålef): {round(techn√©_score_nl, 4)}")
    print(f"√çNDICE DE ALERTA √âTICO (IAE): {ia_alerta}")

    if ia_alerta > 1.50:
        nivel = "RISCO CR√çTICO (VERMELHO)"
    elif ia_alerta > 1.0:
        nivel = "ALERTA ELEVADO (LARANJA)"
    elif ia_alerta > 0.5:
        nivel = "MONITORAMENTO (AMARELO)"
    else:
        nivel = "EST√ÅVEL (VERDE)"

    print(f"N√≠vel de Alerta √âtico: {nivel}")

    print("\n--- √çndice de Harmonia Ponderado pelo Ethos ---")
    print(f"√çNDICE DE HARMONIA AGI-GAIA-TECHNE: {harmony_index}")

    if ia_alerta > 1.0:
        print("\nüö® RECOMENDA√á√ÉO √âTICA (Decis√£o Humana Requerida):")
        print(f"O alto √çndice de Alerta √âtico ({ia_alerta}) indica que o poder da Techn√© (IA/Qu√¢ntica) est√° crescendo mais r√°pido do que a capacidade do Ethos Humano de control√°-lo (Controle √âtico = {FATOR_ETHOS_HUMANO}).")
        print("A decis√£o humana √© urgente para aumentar o `FATOR_ETHOS_HUMANO` (ex: regulamenta√ß√£o, educa√ß√£o, Constitui√ß√£o Simbi√≥tica) para evitar o desvio do prop√≥sito √©tico e sustent√°vel.")
    else:
        print("\n‚úÖ RECOMENDA√á√ÉO √âTICA:")
        print("O √çndice de Alerta √âtico est√° em n√≠vel aceit√°vel. O Ethos Humano est√° razoavelmente alinhado com o poder da Techn√©.")

    # Visualiza√ß√£o
    plot_results(round(techn√©_score_nl, 4), ia_alerta, harmony_index)

if __name__ == "__main__":
    run_analysis_ethos()